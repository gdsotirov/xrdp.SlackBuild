#!/bin/sh
#
# Slackware build script for xrdp
# Copyright (C) 2020-2024 Georgi D. Sotirov <gdsotirov@gmail.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Visit SlackPack at https://sotirov-bg.net/slackpack/
#

. ../../slack-package.conf

NAME=xrdp
VERSION=0.9.24
BUILD=${BUILD:-1}
ARCH=${ARCH:-i586}

TMP=${TMP:-/tmp}
CWD=${CWD:-`pwd`}
PKG_DIR=${PKG_DIR:-/tmp}

if [ ! -e $TMP ]; then
  mkdir --parents $TMP # location to build the source
fi

SRC=$TMP/${NAME}-${VERSION}
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Please, move it or remove it."
  exit 1
fi

PKG=$TMP/package-${NAME}
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir --parents $PKG

# Extract the source
cd $TMP
tar --extract --verbose --file=$CWD/${NAME}-${VERSION}.tar.gz || exit 3
cd $SRC
fix_source

# Apply patch
if [ -e $CWD/${NAME}-${VERSION}.diff ]; then
  patch --backup --strip=1 --suffix=.orig < $CWD/${NAME}-${VERSION}.diff || exit 4
fi

# Configure
# Run autoreconf to apply the patch on configure.ac
# See See https://github.com/neutrinolabs/xrdp/issues/1678
autoreconf --force --install --verbose || exit 5
CONFFLAGS=" --build="${ARCH}-slackware-linux" \
            --host="${ARCH}-slackware-linux" \
            --prefix=/usr \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --sysconfdir=/etc \
            --localstatedir=/var \
            --docdir=/usr/doc \
            --mandir=/usr/man \
            --disable-silent-rules \
            --disable-dependency-tracking"
#           --enable-xrdpvr      # Slackware is not supported
#           --enable-neutrinordp # Not available for Slackware
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure ${CONFFLAGS} \
            --enable-shared=yes \
            --enable-static=no \
            --enable-ipv6 \
            --enable-jpeg \
            --enable-tjpeg \
            --enable-fuse \
            --enable-opus \
            --enable-mp3lame \
            --enable-pixman \
            --enable-painter \
            --enable-rfxcodec || exit 60
cd libpainter && ./configure \
            ${CONFFLAGS} \
            --enable-shared=no \
            --enable-static=yes && cd .. || exit 61
cd librfxcodec && ./configure \
            ${CONFFLAGS} \
            --enable-shared=no \
            --enable-static=yes && cd .. || exit 62

# Build & install
make --jobs || exit 7
make DESTDIR=$PKG install || exit 8
# Move init script in the right place
install --mode 755 --directory $PKG/etc/rc.d
install --mode 644 --preserve-timestamps \
        $CWD/rc.${NAME} $PKG/etc/rc.d/rc.${NAME}.new
rm --force --recursive $PKG/etc/init.d
# Remove generated certificate, key and security keys
# These would be generated on package installation
( cd $PKG/etc/${NAME}; rm --force cert.pem key.pem rsakeys.ini )
# Avoid clobbering configuration files
for ini_file in $PKG/etc/${NAME}/*.ini; do
  mv "${ini_file}" "${ini_file}.new"
done
( cd $PKG/etc/${NAME}
  mv pulse/default.pa pulse/default.pa.new
  mv reconnectwm.sh reconnectwm.sh.new 
  mv startwm.sh startwm.sh.new )
( cd $PKG/etc/default; mv ${NAME} ${NAME}.new )
# Rename PAM configuration file to .new
( cd $PKG/etc/pam.d; mv ${NAME}-sesman ${NAME}-sesman.new )
# Create log directory
install --mode 755 --directory $PKG/var/log

# Prepare the package
bin_perms $PKG
sbin_perms $PKG
( cd $PKG; strip_bin; strip_lib )
gzip_man $PKG
DOCFILES="$DOCFILES design.txt faq-*.txt NEWS.md"
create_docs $PKG ${NAME}-${VERSION}
( cd $PKG/usr/doc/${NAME}-${VERSION}
  mv README.md README )

install --mode 755 --directory $PKG/install
install --mode 644 --preserve-timestamps \
        $CWD/doinst.sh      $PKG/install/doinst.sh
install --mode 644 --preserve-timestamps \
        $CWD/slack-desc     $PKG/install/slack-desc
install --mode 644 --preserve-timestamps \
        $CWD/slack-required $PKG/install/slack-required
install --mode 644 --preserve-timestamps \
        $CWD/slack-suggests $PKG/install/slack-suggests

SBDIR=$PKG/usr/src/slackbuilds/${NAME}-${VERSION}
install --mode 755 --directory $SBDIR
install --mode 644 --preserve-timestamps \
        $CWD/COPYING                 $SBDIR/COPYING
install --mode 644 --preserve-timestamps \
        $CWD/README                  $SBDIR/README
install --mode 644 --preserve-timestamps \
        $CWD/doinst.sh               $SBDIR/doinst.sh
install --mode 644 --preserve-timestamps \
        $CWD/slack-desc              $SBDIR/slack-desc
install --mode 644 --preserve-timestamps \
        $CWD/slack-required          $SBDIR/slack-required
install --mode 644 --preserve-timestamps \
        $CWD/slack-suggests          $SBDIR/slack-suggests
if [ -e $CWD/${NAME}-${VERSION}.diff ]; then
install --mode 644 --preserve-timestamps \
        $CWD/${NAME}-${VERSION}.diff $SBDIR/${NAME}-${VERSION}.diff
fi
install --mode 644 --preserve-timestamps \
        $CWD/${NAME}.SlackBuild      $SBDIR/${NAME}.SlackBuild

# Create package
cd $PKG
PKGNAME=${NAME}-${VERSION}-${ARCH}-${BUILD}${MYIN}
makepkg --chown n --linkadd y --prepend $PKG_DIR/${PKGNAME}.txz
md5sum $PKG_DIR/${PKGNAME}.txz > $PKG_DIR/${PKGNAME}.txz.md5
install --mode 644 $PKG/install/slack-desc $PKG_DIR/${PKGNAME}.txt

# Clean Up
if [ "$1" == "--cleanup" ]; then
  rm --recursive $SRC
  rm --recursive $PKG
fi

